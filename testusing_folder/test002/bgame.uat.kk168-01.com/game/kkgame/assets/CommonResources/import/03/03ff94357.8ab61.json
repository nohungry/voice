[1,["6bcWJJhrFAl6SEiC4dD6El","8eYCJpILFBlo21DJC2ifYM","64PEYpVw9FqJBj4LsupP3e"],["_burn","_noise","_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],2,11]],[[0,0,1,2,4],[1,0,1,2]],[[[[0,"Dissolve",[{"hash":450666660,"record":null,"name":"Dissolve|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D _noise;\nuniform sampler2D _burn;\n#endif\nuniform Parameter {\n  float _noiseValue;\n  float _burnValue;\n  float _highlight;\n};\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    vec4 noise = texture(_noise, v_uv0);\n    if(_noiseValue > noise.r + _burnValue){\n      discard;\n    }\n    o = texture(texture, v_uv0);\n    if(_noiseValue > noise.r){\n      float x = smoothstep(0.0, _burnValue, _noiseValue - noise.r);\n      vec4 burn = texture(_burn, vec2(x, 0.5)) * _highlight;\n      o = burn;\n    }\n  #endif\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform sampler2D _noise;\nuniform sampler2D _burn;\n#endif\nuniform float _noiseValue;\nuniform float _burnValue;\nuniform float _highlight;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    vec4 noise = texture2D(_noise, v_uv0);\n    if(_noiseValue > noise.r + _burnValue){\n      discard;\n    }\n    o = texture2D(texture, v_uv0);\n    if(_noiseValue > noise.r){\n      float x = smoothstep(0.0, _burnValue, _noiseValue - noise.r);\n      vec4 burn = texture2D(_burn, vec2(x, 0.5)) * _highlight;\n      o = burn;\n    }\n  #endif\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Parameter","binding":1,"members":[{"name":"_noiseValue","type":13,"count":1},{"name":"_burnValue","type":13,"count":1},{"name":"_highlight","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]},{"name":"_noise","type":29,"count":1,"binding":31,"defines":["USE_TEXTURE"]},{"name":"_burn","type":29,"count":1,"binding":32,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"Dissolve|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"_noise":{"value":"white","type":29},"_burn":{"value":"white","type":29},"_noiseValue":{"type":13,"value":[0]},"_highlight":{"type":13,"value":[1]},"_burnValue":{"type":13,"value":[0]},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[[1,"Dissolve",[{},"0",11,[{"defines":{"USE_TEXTURE":true}},"props",11,[{"_noiseValue":0.5,"_burnValue":0.04,"_highlight":2},"_burn",6,0,"_noise",6,1]]]]],0,0,[0,0,0],[0,1,2],[0,1,2]]]]
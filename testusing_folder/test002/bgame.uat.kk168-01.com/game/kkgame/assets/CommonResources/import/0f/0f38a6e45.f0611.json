[1,["9aJitOkABCgbTXvN/k21F7"],["_effectAsset"],[["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1]],[[0,0,1,2,4],[1,0,1,3]],[[[[0,"UVOffsetShader",[{"hash":2133196951,"record":null,"name":"UVOffsetShader|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if USE_ALPHATEXTURE\nuniform sampler2D alphaTexture;\nuniform ParameterALPHATEXTURE {\n  float alphaTextureMagnification;\n};\n#endif\nuniform Parameter {\n  float OffsetX;\n  float OffsetY;\n};\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec2 UVnormalize = vec2(0,0);\n  UVnormalize.x = v_uv0.x + OffsetX;\n  UVnormalize.y = v_uv0.y + OffsetY;\n  o *= texture(texture, fract(UVnormalize));\n  o *= v_color;\n  #if USE_ALPHATEXTURE\n  vec4 alpha = vec4(1, 1, 1, 1);\n  alpha *= texture(alphaTexture, v_uv0);\n  o.a = o.a * alpha.a * alphaTextureMagnification;\n  #endif\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if USE_ALPHATEXTURE\nuniform sampler2D alphaTexture;\nuniform float alphaTextureMagnification;\n#endif\nuniform float OffsetX;\nuniform float OffsetY;\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec2 UVnormalize = vec2(0,0);\n  UVnormalize.x = v_uv0.x + OffsetX;\n  UVnormalize.y = v_uv0.y + OffsetY;\n  o *= texture2D(texture, fract(UVnormalize));\n  o *= v_color;\n  #if USE_ALPHATEXTURE\n  vec4 alpha = vec4(1, 1, 1, 1);\n  alpha *= texture2D(alphaTexture, v_uv0);\n  o.a = o.a * alpha.a * alphaTextureMagnification;\n  #endif\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHATEXTURE","type":"boolean","defines":[]}],"blocks":[{"name":"ParameterALPHATEXTURE","binding":0,"members":[{"name":"alphaTextureMagnification","type":13,"count":1}],"defines":["USE_ALPHATEXTURE"]},{"name":"Parameter","binding":1,"members":[{"name":"OffsetX","type":13,"count":1},{"name":"OffsetY","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]},{"name":"alphaTexture","type":29,"count":1,"binding":31,"defines":["USE_ALPHATEXTURE"]}]}],[{"passes":[{"program":"UVOffsetShader|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"alphaTexture":{"value":"white","type":29},"alphaTextureMagnification":{"type":13,"value":[1]}}}]}]]],0,0,[],[],[]],[[[1,"UVOffsetMaterial",{"0":{"props":{},"defines":{"USE_ALPHATEXTURE":true}}}]],0,0,[0],[0],[0]]]]